# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  ENV_FILE: ${{ secrets.ENV_FILE }}

jobs:
  node-build:
    runs-on: ubuntu-latest
    environment: Development

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - run: npm ci
    - run: npm install
    
    - name: 'Create env file'
      run: |
          touch .env
          echo "${{ env.ENV_FILE }}" > .env
          cat .env
    
    - name: 'List directory contents'
      run: ls -la

  docker-bulild-images:
    # The type of runner that the job will run on
    needs: node-build

    runs-on: ubuntu-latest
    # build docker image and push to docker hub
    # only if the app build and test successfully
    environment: Development

    steps:
      - name: checkout repo
        uses: actions/checkout@v2
        
      - name: 'Create env file'
        run: |
            touch .env
            echo "${{ env.ENV_FILE }}" > .env
            cat .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{env.DOCKERHUB_USERNAME}}
          password: ${{env.DOCKERHUB_TOKEN}}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{env.DOCKERHUB_USERNAME}}/nodejs-demo:latest

